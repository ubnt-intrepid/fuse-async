name: CI Workflow

on:
  push:
    branches:
      - master
  pull_request:

env:
  CARGO_HUSKY_DONT_INSTALL_HOOKS: true
  CARGO_TERM_VERBOSE: true

jobs:
  Test:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        rust_toolchain: [stable, beta, nightly]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: Install APT dependencies
      run: |
        sudo apt-get update -yqq
        sudo apt-get install -yqq --no-install-recommends fuse

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust_toolchain }}
        override: true

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --workspace

  Lint:
    runs-on: ubuntu-18.04
    env:
      RUSTFLAGS: "-D warnings"
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: Install APT dependencies
      run: |
        sudo apt-get update -yqq
        sudo apt-get install -yqq --no-install-recommends fuse

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        components: rustfmt, clippy
        override: true

    - name: Format check
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

    - name: Clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --workspace --all-targets

  DeployMasterDoc:
    runs-on: ubuntu-18.04
    container:
      image: rustops/crates-build-env:latest
      options: --memory 3221225472
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true

    # TODO:
    # * restrict network access during building docs.
    # * restrict all write access expect target/
    - name: Build API docs
      uses: actions-rs/cargo@v1
      with:
        command: xscript
        args: docs

    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: published-docs
        path: target/doc

    - name: Deply to GitHub Pages
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: peaceiris/actions-gh-pages@v2.3.1
      env:
        ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: ./target/doc

  Coverage:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: Install APT dependencies
      run: |
        sudo apt-get update -yqq
        sudo apt-get install -yqq --no-install-recommends fuse

    - name: Install cargo-tarpaulin
      run: |
        curl -L https://github.com/xd009642/tarpaulin/releases/download/0.10.0/cargo-tarpaulin-0.10.0-travis.tar.gz | tar zxf -
        mkdir -pv $HOME/.cargo/bin
        mv -v ./cargo-tarpaulin $HOME/.cargo/bin
        echo ::add-path::$HOME/.cargo/bin

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Run tarpaulin
      uses: actions-rs/cargo@v1
      with:
        command: tarpaulin
        args: --verbose --workspace --out Xml

    - name: Send report to Codecov
      uses: codecov/codecov-action@v1.0.3
      if: success()
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
